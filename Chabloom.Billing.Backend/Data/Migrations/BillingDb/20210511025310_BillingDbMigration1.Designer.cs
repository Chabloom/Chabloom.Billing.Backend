// <auto-generated />
using System;
using Chabloom.Billing.Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Chabloom.Billing.Backend.Data.Migrations.BillingDb
{
    [DbContext(typeof(BillingDbContext))]
    [Migration("20210511025310_BillingDbMigration1")]
    partial class BillingDbMigration1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Chabloom.Billing.Backend.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uuid");

                    b.Property<bool>("Disabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("DisabledTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DisabledUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReferenceId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("UpdatedTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUser")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0c994055-dfe2-4863-a087-2b47cd2a1e25"),
                            Address = "400 W Martintown Rd",
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "400 W Martintown Rd",
                            ReferenceId = "12345",
                            TenantId = new Guid("a2cee23f-3250-4b1b-93dc-87443b02dd89"),
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("c68ddf06-20f6-41f0-869a-6f39cd8d9431"),
                            Address = "402 W Martintown Rd",
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "402 W Martintown Rd",
                            ReferenceId = "12346",
                            TenantId = new Guid("a2cee23f-3250-4b1b-93dc-87443b02dd89"),
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("5a79115e-2e5a-4fca-9ea1-e6a21e7de4d4"),
                            Address = "403 W Martintown Rd",
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "403 W Martintown Rd",
                            ReferenceId = "12347",
                            TenantId = new Guid("a2cee23f-3250-4b1b-93dc-87443b02dd89"),
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("1ba99ecc-48d3-4839-b748-7565e2a72f77"),
                            Address = "404 W Martintown Rd",
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "404 W Martintown Rd",
                            ReferenceId = "12348",
                            TenantId = new Guid("a2cee23f-3250-4b1b-93dc-87443b02dd89"),
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("31a59e75-197f-433c-b6b4-6160c6cace42"),
                            Address = "400 Richland Ave",
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "400 Richland Ave",
                            ReferenceId = "12345",
                            TenantId = new Guid("7ba3a979-5abf-407f-aee1-75e2d5522711"),
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("d1eaffb6-5757-4fca-b15f-04ec11073275"),
                            Address = "402 Richland Ave",
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "402 Richland Ave",
                            ReferenceId = "12346",
                            TenantId = new Guid("7ba3a979-5abf-407f-aee1-75e2d5522711"),
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("8a276669-64f9-4057-a741-10b6b5ff92b0"),
                            Address = "403 Richland Ave",
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "403 Richland Ave",
                            ReferenceId = "12347",
                            TenantId = new Guid("7ba3a979-5abf-407f-aee1-75e2d5522711"),
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("e89ee340-96d2-49b2-a7c9-f444fb95c148"),
                            Address = "404 Richland Ave",
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "404 Richland Ave",
                            ReferenceId = "12348",
                            TenantId = new Guid("7ba3a979-5abf-407f-aee1-75e2d5522711"),
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Chabloom.Billing.Backend.Models.AccountUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("AccountUsers");
                });

            modelBuilder.Entity("Chabloom.Billing.Backend.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b749b662-3e2b-4199-a11f-85cb1b6ab3be"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("421bde72-5f81-451b-83b6-08d8d3b98c06")
                        });
                });

            modelBuilder.Entity("Chabloom.Billing.Backend.Models.Bill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("DisabledTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DisabledUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TransactionId")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUser")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Bills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7690274e-c4ad-4964-9cc5-3625ccaabcca"),
                            AccountId = new Guid("0c994055-dfe2-4863-a087-2b47cd2a1e25"),
                            Amount = 43.29m,
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Currency = "USD",
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            DueDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "August 2021",
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("8be7e620-7f46-4460-a49a-de09b8895640"),
                            AccountId = new Guid("c68ddf06-20f6-41f0-869a-6f39cd8d9431"),
                            Amount = 55.21m,
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Currency = "USD",
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            DueDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "August 2021",
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("8240327d-547a-4875-92c8-b1dcfa5f13a9"),
                            AccountId = new Guid("5a79115e-2e5a-4fca-9ea1-e6a21e7de4d4"),
                            Amount = 61.23m,
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Currency = "USD",
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            DueDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "August 2021",
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("6eec413f-f55e-4dac-8a6d-2f38e5a04fe7"),
                            AccountId = new Guid("1ba99ecc-48d3-4839-b748-7565e2a72f77"),
                            Amount = 45.91m,
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Currency = "USD",
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            DueDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "August 2021",
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("eb54f672-a3aa-458c-8b4d-18cacae438d6"),
                            AccountId = new Guid("31a59e75-197f-433c-b6b4-6160c6cace42"),
                            Amount = 33.71m,
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Currency = "USD",
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            DueDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "August 2021",
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("b0eb88dc-c8ea-45c2-80a7-8abf5978cee5"),
                            AccountId = new Guid("d1eaffb6-5757-4fca-b15f-04ec11073275"),
                            Amount = 42.52m,
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Currency = "USD",
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            DueDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "August 2021",
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("61ce9459-55aa-452e-bd29-5e31913e42ff"),
                            AccountId = new Guid("8a276669-64f9-4057-a741-10b6b5ff92b0"),
                            Amount = 76.22m,
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Currency = "USD",
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            DueDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "August 2021",
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("27bc4cdc-e4f8-43df-a23d-4136d371254b"),
                            AccountId = new Guid("e89ee340-96d2-49b2-a7c9-f444fb95c148"),
                            Amount = 36.88m,
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Currency = "USD",
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            DueDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "August 2021",
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Chabloom.Billing.Backend.Models.BillSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("date");

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("Day")
                        .HasColumnType("integer");

                    b.Property<bool>("Disabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("DisabledTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DisabledUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("MonthInterval")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("TransactionScheduleId")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUser")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("BillSchedules");

                    b.HasData(
                        new
                        {
                            Id = new Guid("be05ae00-081d-48d4-b047-e93fb7523934"),
                            AccountId = new Guid("0c994055-dfe2-4863-a087-2b47cd2a1e25"),
                            Amount = 33.50m,
                            BeginDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Currency = "USD",
                            Day = 1,
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            MonthInterval = 1,
                            Name = "Monthly Water",
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("298aa43a-6376-4049-ae6e-6c0d1741fcc4"),
                            AccountId = new Guid("c68ddf06-20f6-41f0-869a-6f39cd8d9431"),
                            Amount = 33.50m,
                            BeginDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Currency = "USD",
                            Day = 1,
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            MonthInterval = 1,
                            Name = "Monthly Water",
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("d28f8ec7-e716-4d5a-b0c4-832d9a1134d5"),
                            AccountId = new Guid("5a79115e-2e5a-4fca-9ea1-e6a21e7de4d4"),
                            Amount = 33.50m,
                            BeginDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Currency = "USD",
                            Day = 1,
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            MonthInterval = 1,
                            Name = "Monthly Water",
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("38fbb0fe-b1b3-42a9-b591-88c37381e5bc"),
                            AccountId = new Guid("1ba99ecc-48d3-4839-b748-7565e2a72f77"),
                            Amount = 33.50m,
                            BeginDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Currency = "USD",
                            Day = 1,
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            MonthInterval = 1,
                            Name = "Monthly Water",
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("600d7c6f-6b6a-4a0c-a62e-c5ed482ebc09"),
                            AccountId = new Guid("31a59e75-197f-433c-b6b4-6160c6cace42"),
                            Amount = 33.50m,
                            BeginDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Currency = "USD",
                            Day = 1,
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            MonthInterval = 1,
                            Name = "Monthly Water",
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("35a5cc23-e120-48fe-afda-d42c26233193"),
                            AccountId = new Guid("d1eaffb6-5757-4fca-b15f-04ec11073275"),
                            Amount = 33.50m,
                            BeginDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Currency = "USD",
                            Day = 1,
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            MonthInterval = 1,
                            Name = "Monthly Water",
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("bfb53864-8389-4038-9b49-60bbb1358158"),
                            AccountId = new Guid("8a276669-64f9-4057-a741-10b6b5ff92b0"),
                            Amount = 33.50m,
                            BeginDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Currency = "USD",
                            Day = 1,
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            MonthInterval = 1,
                            Name = "Monthly Water",
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("cf28d12e-e51a-491c-ada8-cd6fcf840e88"),
                            AccountId = new Guid("e89ee340-96d2-49b2-a7c9-f444fb95c148"),
                            Amount = 33.50m,
                            BeginDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Currency = "USD",
                            Day = 1,
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            MonthInterval = 1,
                            Name = "Monthly Water",
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Chabloom.Billing.Backend.Models.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uuid");

                    b.Property<bool>("Disabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("DisabledTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DisabledUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUser")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Tenants");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a2cee23f-3250-4b1b-93dc-87443b02dd89"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "North Augusta",
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("7ba3a979-5abf-407f-aee1-75e2d5522711"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Disabled = false,
                            DisabledTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DisabledUser = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Aiken",
                            UpdatedTimestamp = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUser = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Chabloom.Billing.Backend.Models.TenantUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("TenantUsers");
                });

            modelBuilder.Entity("Chabloom.Billing.Backend.Models.Account", b =>
                {
                    b.HasOne("Chabloom.Billing.Backend.Models.Tenant", "Tenant")
                        .WithMany("Accounts")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Chabloom.Billing.Backend.Models.AccountUser", b =>
                {
                    b.HasOne("Chabloom.Billing.Backend.Models.Account", "Account")
                        .WithMany("Users")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Chabloom.Billing.Backend.Models.Bill", b =>
                {
                    b.HasOne("Chabloom.Billing.Backend.Models.Account", "Account")
                        .WithMany("Bills")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Chabloom.Billing.Backend.Models.BillSchedule", b =>
                {
                    b.HasOne("Chabloom.Billing.Backend.Models.Account", "Account")
                        .WithMany("BillSchedules")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Chabloom.Billing.Backend.Models.TenantUser", b =>
                {
                    b.HasOne("Chabloom.Billing.Backend.Models.Tenant", "Tenant")
                        .WithMany("Users")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Chabloom.Billing.Backend.Models.Account", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("BillSchedules");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Chabloom.Billing.Backend.Models.Tenant", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
